using System;

class CerberusMinesweeper
{
    /// <summary>
    /// Prints a message on the console
    /// </summary>
    /// <param name="message"> the message to be printed </param>
    /// <param name="xCoord"> x coordinate of the console position </param>
    /// <param name="yCoord"> y coordinate of the console position </param>
    static void PrintMessageOnConsole(string message, int xCoord, int yCoord)
    { 
        // TODO: Implement message printing on the console
    }

    /// <summary>
    /// Method used to print a difficulty menu on the console
    /// </summary>
    /// <param name="xCord"> x position of the upper left corner of the menu </param>
    /// <param name="yCoord"> y position of the upper left corner of the menu </param>
    /// <returns> An integer representing the difficuilty </returns>    
    static int PrintDifficultyMenu(int xCord, int yCoord)
    {
        // TODO: Implement difficulty menu using PrintMessageOnConsole method
    }

    /// <summary>
    /// Prints a mines left count
    /// </summary>
    /// <param name="array"> The array with the mines and numbers </param>
    static void PrintMinesLeft(int[] array)
    {
        // TODO: Implement method to print the mines left somewhere using PrintMessageOnConsole Method
    }

    /// <summary>
    /// Keeping count of the seconds after the game has started    
    /// </summary>
    /// <param name="start"> the time the game started </param>
    static void PrintTimeElapsed(DateTime start)
    { 
        // TODO: Implement method to print the time since the game started
    }

    /// <summary>
    /// Draws the board
    /// </summary>
    /// <param name="minesArray"> the array with the mines and numbers</param>
    /// <param name="visibilityArray"> the array with the information about what is visible to the player </param>
    static void PrintBoard(int[] minesArray, int[] visibilityArray)
    {
        // TODO: Implement drawing of the board     
    }

    /// <summary>
    /// Creates a playing field with the given dimensions
    /// </summary>
    /// <param name="difficulty"> The difficulty determines the row and column count </param>
    /// <returns> An integer array with the given dimensions </returns>
    static int[] CreateBoard(int difficulty)
    { 
        // TODO: Implement array creation
    }

    /// <summary>
    /// Populates an array with mines at randomly generated positions
    /// </summary>
    /// <param name="array"> mines and numbers array </param>
    /// <param name="mineCount"> number of mines to be generated </param>
    static void FillWithRandomMines(int[] array, int mineCount)
    {
        // TODO:Implement random generation of n mines in the array
    }

    /// <summary>
    /// Fills the cells around the mines with the right numbers
    /// </summary>
    /// <param name="array"> the array with the mines and the numbers </param>
    static void CalculateDigitsArroundMines(int[] array)
    {
        // TODO:Implement generation of digits arround mines generated by FillWithRandomMines Method
    }

    static void Main()
    {
    }
}